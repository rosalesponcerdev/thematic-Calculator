name: Build App

on:
  workflow_dispatch:
  push:
    branches: ["prod", "feature/docker"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  containerization:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4

      - uses: cschleiden/replace-tokens@v1
        with:
          files: '["./devops-nginx.conf"]'
        env:
          DOMAIN: ${{vars.DOMAIN}}
          SUB_DOMAIN: ${{vars.SUB_DOMAIN}}
      - run: cat ./devops-nginx.conf

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set up WARP
        uses: fscarmen/warp-on-actions@v1.2
        with:
          stack: dual

      - name: testing ipv6 for command
        run: |
          curl -m 9 --ipv6 --verbose https://google.com
      - name: test
        run: echo ${{secrets.DOCKER_USERNAME}}

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{vars.DOCKER_REPOSITORI}}:${{github.sha}}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          command_timeout: 30s
          protocol: tcp6
          script: |
            docker stop ${{vars.SUB_DOMAIN}}.${{vars.DOMAIN}} || true
            docker rm ${{vars.SUB_DOMAIN}}.${{vars.DOMAIN}} || true
            docker pull ${{secrets.DOCKER_USERNAME}}/${{vars.DOCKER_REPOSITORI}}${{github.sha}}
            docker run -d \
                --name ${{vars.SUB_DOMAIN}}.${{vars.DOMAIN}} \
                --env VIRTUAL_HOST=${{vars.SUB_DOMAIN}}.${{vars.DOMAIN}} \
                --restart unless-stopped \
                --network docker-multiple_default \
                ${{secrets.DOCKER_USERNAME}}/${{vars.DOCKER_REPOSITORI}}:${{github.sha}}
